(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{621:function(s,t,a){"use strict";a.r(t);var e=a(27),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("Visitors"),s._v(" "),a("h1",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[s._v("#")]),s._v(" 常见问题")]),s._v(" "),a("h2",{attrs:{id:"一-上传失败"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-上传失败"}},[s._v("#")]),s._v(" 一.上传失败")]),s._v(" "),a("p",[s._v("重新生成 token，提示输入密码的时候，输入生成的 token")]),s._v(" "),a("h2",{attrs:{id:"二-关于-token-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-关于-token-问题"}},[s._v("#")]),s._v(" 二.关于 token 问题")]),s._v(" "),a("p",[s._v("生成 token，要记住 token 的名字和 token，因为下次需要使用第一次使用的 token 进行上传才能上传成功")]),s._v(" "),a("p",[s._v("如果不记得了，去 setting-> Developer settings->Personal access tokens->点击对应的 token 名->Regenerate token")]),s._v(" "),a("h2",{attrs:{id:"三-分支问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-分支问题"}},[s._v("#")]),s._v(" 三.分支问题")]),s._v(" "),a("h3",{attrs:{id:"_1-git-创建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-创建分支"}},[s._v("#")]),s._v(" 1. Git 创建分支")]),s._v(" "),a("p",[s._v("(1)查看分支 "),a("code",[s._v("git branch")])]),s._v(" "),a("p",[s._v("(2)创建本地分支 "),a("code",[s._v("git checkout -b 新分支名")])]),s._v(" "),a("p",[s._v("(3)推送本地分支到远程仓库 "),a("code",[s._v("git push --set-upstream origin 分支名")])]),s._v(" "),a("h3",{attrs:{id:"_2-git-修改分支的名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-修改分支的名称"}},[s._v("#")]),s._v(" 2. Git 修改分支的名称")]),s._v(" "),a("p",[s._v("需要将分支 "),a("code",[s._v("old")]),s._v(" 修改为 "),a("code",[s._v("new")]),s._v("，执行如下步骤：")]),s._v(" "),a("p",[s._v("(1)执行命令 "),a("code",[s._v("git checkout old")]),s._v(" 切换到 "),a("code",[s._v("old")]),s._v(" 分支，如果已经在这个分支下，可以不执行此步骤")]),s._v(" "),a("p",[s._v("(2)执行命令 "),a("code",[s._v("git pull origin old")]),s._v(" 将代码更新到和远程仓库一致")]),s._v(" "),a("p",[s._v("(3)执行命令 "),a("code",[s._v("git branch -m old new")]),s._v(" 将本地仓库的 "),a("code",[s._v("old")]),s._v(" 的名称修改为 "),a("code",[s._v("new")])]),s._v(" "),a("p",[s._v("(4)执行命令 "),a("code",[s._v("git push --set-upstream origin new")]),s._v(" 将本地分支 "),a("code",[s._v("push")]),s._v(" 到远程仓库")]),s._v(" "),a("p",[s._v("(5)执行命令 "),a("code",[s._v("git push origin --delete old")]),s._v(" 将远程分支 "),a("code",[s._v("old")]),s._v(" 删除")]),s._v(" "),a("h3",{attrs:{id:"_3-git-clone时指定分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-clone时指定分支"}},[s._v("#")]),s._v(" 3. "),a("code",[s._v("git clone")]),s._v("时指定分支")]),s._v(" "),a("p",[s._v("（1）git clone 指定分支：git clone -b 分支名称 项目地址，例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("// 假设分支名称为 test，则：\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone -b "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" 项目地址\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4-删除分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除分支"}},[s._v("#")]),s._v(" 4. 删除分支")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("// 删除本地分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d localBranchName\n\n// 删除远程分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin --delete remoteBranchName\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_5-分支合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-分支合并"}},[s._v("#")]),s._v(" 5. 分支合并")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("// 删除本地分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge 被合并的分支名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("例子：现在想把 dev1.0 已经增加的功能先合并到 dev1.2\n（1）"),a("code",[s._v("checkout")]),s._v(" 1.2 和 1.0")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout dev1.0\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout dev1.2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("（2）在 devv1.2 的分支基础上执行 merge")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge dev1.0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("（3）没有报错")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin dev1.2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("（4）报错，基本上就是冲突的错误。这时候就要根据提示的错误，找到对应的文件，查看冲突的内容，然后进行删减。然后再执行提交步骤，例如以下步骤：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"解决2个分支之间的冲突"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin dev1.2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"四-commit-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-commit-问题"}},[s._v("#")]),s._v(" 四.commit 问题")]),s._v(" "),a("h3",{attrs:{id:"_1-重写上一次-commit-信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-重写上一次-commit-信息"}},[s._v("#")]),s._v(" 1.重写上一次 commit 信息")]),s._v(" "),a("blockquote",[a("p",[s._v("git commit --amend")])]),s._v(" "),a("p",[s._v("(1)修改最近一次的 commit 信息")]),s._v(" "),a("p",[a("strong",[s._v("步骤")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit --amend\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 进入 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" 操作界面之后, 点击字母键 i 然后进入 INSERT 模式，然后对 commit 信息进行修改，然后 ESC 然后 :wq 保存退出\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 然后执行 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log 会发现最近的一次 commit 信息被修改成功了\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("(2)修改已经提交到 git 远程仓库的 commit 信息")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 首先回撤到上一次提交，不修改本次提交的改动 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --soft HEAD~1\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 重新做一次提交 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"重新提交 commit 信息"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 强推本地分支到远程仓库 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f origin master\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 查看远程仓库中的是否已经修改 commit 信息\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("执行 git commit --amend 后会自动进入上一次提交信息的编辑状态（关于编辑命令，参考"),a("RouterLink",{attrs:{to:"/skills/linux/01.vi_bash.html"}},[s._v("bash")]),s._v("），改完后保存退出就好。")],1),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("p",[s._v("更多参考"),a("a",{attrs:{href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"}},[s._v("《Pro git》电子版"),a("OutboundLink")],1)])],1)}),[],!1,null,null,null);t.default=n.exports}}]);