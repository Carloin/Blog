(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{484:function(t,v,_){"use strict";_.r(v);var a=_(27),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("Visitors",{attrs:{mydate:"2021-10-14"}}),t._v(" "),_("h2",{attrs:{id:"前端项目系分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端项目系分"}},[t._v("#")]),t._v(" 前端项目系分")]),t._v(" "),_("p",[t._v("很多人觉得前端项目没必要系分，根据设计稿和接口文档来即可。")]),t._v(" "),_("p",[t._v("但是事实上就是，时间紧任务重的项目，不一定有规范的接口文档和设计稿。也许后台接口也是外包的，设计稿也是外包的，这种情况也是存在的。")]),t._v(" "),_("p",[t._v("这种时候，前端的系分就会尤为重要，将模块独立开来，系分下去后，至少开发少了很多沟通上的问题。如果系分的完善，对后续减少不必要的错误也有帮助。")]),t._v(" "),_("h2",{attrs:{id:"如何规范开发代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何规范开发代码"}},[t._v("#")]),t._v(" 如何规范开发代码")]),t._v(" "),_("p",[t._v("目前有两种思路：")]),t._v(" "),_("ul",[_("li",[t._v("团队采用 Eslint ，并采用同一套 lint 规范。")]),t._v(" "),_("li",[t._v("采用 TypeScript ，让整个团队都采用同一套 TypeScript 的写法即可。")])]),t._v(" "),_("p",[t._v("两者同时采用。不同的业务场景下，也许只需要 Eslint 这些工具加统一规范即可。")]),t._v(" "),_("h2",{attrs:{id:"如何统一团队风格"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何统一团队风格"}},[t._v("#")]),t._v(" 如何统一团队风格")]),t._v(" "),_("p",[t._v("从各个开发框架上看，主要是 vue 和 react")]),t._v(" "),_("h3",{attrs:{id:"vue"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" vue")]),t._v(" "),_("p",[t._v("遵循开发社区的最佳实践")]),t._v(" "),_("h3",{attrs:{id:"react"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" react")]),t._v(" "),_("ol",[_("li",[t._v("需要考虑到：")])]),t._v(" "),_("ul",[_("li",[t._v("Function Component + hooks or Class Component")]),t._v(" "),_("li",[t._v("受控 or 非受控")]),t._v(" "),_("li",[t._v("如何组合页面，数据流呢？")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("解决\n这个规范不一定是最好的，但是一定是当前背景下，最适合团队、项目、开发流程的。")])]),t._v(" "),_("p",[t._v("如果团队技术栈偏向新，且想要快速搭建开发，流程快且有需要保证整个代码的质量。以后台管理项目为例：")]),t._v(" "),_("ul",[_("li",[t._v("React hooks + Function Component")]),t._v(" "),_("li",[t._v("UI 框架采用 Ant Design")]),t._v(" "),_("li",[t._v("如果数据流复杂采用 Dva 、redux 、mobx 都可行。")]),t._v(" "),_("li",[t._v("所有除了组件外的命名都采用大驼峰。")]),t._v(" "),_("li",[_("code",[t._v("超过 2 处以上")]),t._v("复用的组件抽离出来成为公共组件。")]),t._v(" "),_("li",[t._v("·······\n当选型选择定下来后，后续的规则逐步添加，这样就形成了一套算是完整的，适合当前团队、项目、开发流程的规范、团队代码风格。")])]),t._v(" "),_("blockquote",[_("p",[t._v("注意：并非所有团队、项目，都适合我上诉说的这几点。不同团队不同，甚至同团队这一个项目和下一个项目之间，也会出现不一样的情况。适合当下的才是最好的。")])]),t._v(" "),_("p",[t._v("同时群策群力，把项目开发的小伙伴拉在一起，一同讨论制定下来这个规范，也是不错的选择。")]),t._v(" "),_("p",[t._v("如果团队已经有了一套规范，在开发之前也应当好好想想，这套规范是否需要发生改变？是否已经过时需要制定新的规范？")]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("p",[t._v("https://zhuanlan.zhihu.com/p/399424496")])],1)}),[],!1,null,null,null);v.default=s.exports}}]);